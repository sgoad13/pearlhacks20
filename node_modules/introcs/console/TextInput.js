"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DOM_1 = require("./DOM");
var DOMClasses_1 = require("./DOMClasses");
var ENTER_KEY = 13;
var TextInput = (function () {
    function TextInput(prompt, type, validate, parser, callback) {
        this.submitted = false;
        this.validate = validate;
        this.parser = parser;
        this.callback = callback;
        this.initDOM(prompt, type);
    }
    TextInput.prototype.getValue = function () {
        return this.parser(this.textInput.value);
    };
    TextInput.prototype.focus = function () {
        this.textInput.focus();
    };
    TextInput.prototype.initDOM = function (prompt, type) {
        this.okButton = DOM_1.input("button", "btn submit", "Ok");
        this.textInput = DOM_1.input("text", "value");
        this.dom = DOM_1.div("ask", [
            DOM_1.div("prompt", prompt),
            this.textInput,
            this.okButton,
            DOM_1.div("type", type)
        ]);
        this.invalidState();
        this.initEventHandlers();
    };
    TextInput.prototype.initEventHandlers = function () {
        this.okButton.onclick = this.submit.bind(this);
        this.textInput.onkeyup = this.change.bind(this);
    };
    TextInput.prototype.submit = function (e) {
        this.submittedState();
        this.callback(this.getValue());
    };
    TextInput.prototype.change = function (e) {
        if (this.validate(this.textInput.value)) {
            if (e.keyCode == ENTER_KEY) {
                this.submit(e);
            }
            else {
                this.validState();
            }
        }
        else {
            this.invalidState();
        }
    };
    TextInput.prototype.validState = function () {
        DOMClasses_1.default.add(this.dom, "valid");
        this.okButton.removeAttribute("disabled");
    };
    TextInput.prototype.invalidState = function () {
        DOMClasses_1.default.remove(this.dom, "valid");
        this.okButton.setAttribute("disabled", "disabled");
    };
    TextInput.prototype.submittedState = function () {
        DOMClasses_1.default.add(this.dom, "submitted");
        DOMClasses_1.default.remove(this.dom, "valid");
        this.textInput.setAttribute("disabled", "disabled");
        this.okButton.setAttribute("disabled", "disabled");
    };
    return TextInput;
}());
exports.default = TextInput;
//# sourceMappingURL=TextInput.js.map
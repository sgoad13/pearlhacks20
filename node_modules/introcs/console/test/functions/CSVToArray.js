"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var FunctionCall_1 = require("./FunctionCall");
var FunctionCallMatchError_1 = require("./FunctionCallMatchError");
var CSVToArray = (function (_super) {
    __extends(CSVToArray, _super);
    function CSVToArray(prompt, response) {
        var _this = _super.call(this) || this;
        _this._prompt = prompt;
        if (response) {
            _this._response = response;
        }
        return _this;
    }
    CSVToArray.prototype.toString = function () {
        if (this._response !== undefined) {
            return "csvToArray(\"" + this._prompt + "\") ... testing with input.";
        }
        else {
            return "csvToArray(\"" + this._prompt + "\")";
        }
    };
    CSVToArray.prototype.test = function (actual) {
        if (actual instanceof CSVToArray) {
            return;
        }
        throw new FunctionCallMatchError_1.default(this, actual);
    };
    Object.defineProperty(CSVToArray.prototype, "prompt", {
        get: function () {
            return this._prompt;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CSVToArray.prototype, "response", {
        get: function () {
            return this._response;
        },
        enumerable: true,
        configurable: true
    });
    return CSVToArray;
}(FunctionCall_1.default));
exports.default = CSVToArray;
//# sourceMappingURL=CSVToArray.js.map
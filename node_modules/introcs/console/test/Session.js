"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var OutOfCallsError_1 = require("./OutOfCallsError");
var Session = (function () {
    function Session() {
        this._t = 0;
        this._calls = [];
        this._ignore = function () { return false; };
    }
    Session.prototype.log = function (call) {
        if (!this._ignore(call)) {
            this._calls.push(call);
            return true;
        }
        return false;
    };
    Object.defineProperty(Session.prototype, "calls", {
        get: function () {
            return this._calls;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Session.prototype, "ignore", {
        set: function (filter) {
            this._ignore = filter;
        },
        enumerable: true,
        configurable: true
    });
    Session.prototype.hasNext = function () {
        return this._t < this._calls.length;
    };
    Session.prototype.next = function () {
        return this._calls[this._t++];
    };
    Session.prototype.test = function (actual) {
        if (this.hasNext()) {
            var expected = this.next();
            expected.test(actual);
            return expected;
        }
        else {
            throw new OutOfCallsError_1.default(actual);
        }
    };
    Session.prototype.contains = function (test) {
        return this._calls.some(test);
    };
    Session.prototype.toString = function () {
        return this._calls.map(function (f) { return f.toString(); }).join("\n");
    };
    return Session;
}());
exports.default = Session;
//# sourceMappingURL=Session.js.map
import FunctionCall from "./functions/FunctionCall";
export interface Predicate<T> {
    (f: T): boolean;
}
declare class Session {
    private _calls;
    private _t;
    private _ignore;
    constructor();
    log(call: FunctionCall): boolean;
    readonly calls: FunctionCall[];
    ignore: Predicate<FunctionCall>;
    hasNext(): boolean;
    next(): FunctionCall;
    test(actual: FunctionCall): FunctionCall;
    contains(test: Predicate<FunctionCall>): boolean;
    toString(): string;
}
export default Session;

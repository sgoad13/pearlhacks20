"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var PointPathSegment_1 = require("./PointPathSegment");
var CubicCurveToPathSegment = (function (_super) {
    __extends(CubicCurveToPathSegment, _super);
    function CubicCurveToPathSegment(cx1, cy1, cx2, cy2, x, y) {
        var _this = _super.call(this, x, y) || this;
        _this._cx1 = cx1;
        _this._cy1 = cy1;
        _this._cx2 = cx2;
        _this._cy2 = cy2;
        return _this;
    }
    CubicCurveToPathSegment.prototype.toString = function () {
        return "C " + this._cx1 + " " + this._cy1 + ", " + this._cx2 + " " + this._cy2 + ", " + this.x + " " + this.y;
    };
    Object.defineProperty(CubicCurveToPathSegment.prototype, "cx1", {
        get: function () {
            return this._cx1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CubicCurveToPathSegment.prototype, "cy1", {
        get: function () {
            return this._cy1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CubicCurveToPathSegment.prototype, "cx2", {
        get: function () {
            return this._cx2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CubicCurveToPathSegment.prototype, "cy2", {
        get: function () {
            return this._cy2;
        },
        enumerable: true,
        configurable: true
    });
    return CubicCurveToPathSegment;
}(PointPathSegment_1.default));
exports.default = CubicCurveToPathSegment;
//# sourceMappingURL=CubicCurveToPathSegment.js.map
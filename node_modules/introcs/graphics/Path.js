"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Shape_1 = require("./Shape");
var MoveToPathSegment_1 = require("./path/MoveToPathSegment");
var LineToPathSegment_1 = require("./path/LineToPathSegment");
var QuadraticCurveToPathSegment_1 = require("./path/QuadraticCurveToPathSegment");
var CubicCurveToPathSegment_1 = require("./path/CubicCurveToPathSegment");
var ClosePathSegment_1 = require("./path/ClosePathSegment");
var Color_1 = require("./Color");
var Path = (function (_super) {
    __extends(Path, _super);
    function Path(x, y) {
        var _this = _super.call(this) || this;
        _this._segments = [];
        _this.fill = Color_1.default.BLACK;
        _this.fillOpacity = 0;
        _this.moveTo(x, y);
        return _this;
    }
    Path.prototype.toString = function () {
        return this._segments.join(" ");
    };
    Path.prototype.add = function (segment) {
        this._segments.push(segment);
        this.notify();
        return this;
    };
    Path.prototype.moveTo = function (x, y) {
        return this.add(new MoveToPathSegment_1.default(x, y));
    };
    Path.prototype.lineTo = function (x, y) {
        return this.add(new LineToPathSegment_1.default(x, y));
    };
    Path.prototype.quadraticCurveTo = function (cx, cy, x, y) {
        return this.add(new QuadraticCurveToPathSegment_1.default(cx, cy, x, y));
    };
    Path.prototype.cubicCurveTo = function (cx1, cy1, cx2, cy2, x, y) {
        return this.add(new CubicCurveToPathSegment_1.default(cx1, cy1, cx2, cy2, x, y));
    };
    Path.prototype.close = function () {
        return this.add(new ClosePathSegment_1.default());
    };
    Object.defineProperty(Path.prototype, "segments", {
        get: function () {
            return this._segments;
        },
        set: function (value) {
            this._segments = value;
            this.notify();
        },
        enumerable: true,
        configurable: true
    });
    return Path;
}(Shape_1.default));
exports.default = Path;
//# sourceMappingURL=Path.js.map